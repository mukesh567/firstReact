{"version":3,"sources":["About.js","Navbar.js","TextArea.js","alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","tittle","Abouttext","placeholder","onClick","toggleMode","htmlFor","TextArea","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","alert","height","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ca3a5a2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    //  const[myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor:'white'\r\n    //  }\r\n    // )\r\n    // const [btntext, setBtntext] = useState(\"Enable dark mode\");\r\n    // const toggleStyle=()=>{\r\n    //   if(myStyle.color==='black')\r\n    //   {\r\n    //       setMyStyle({\r\n    //           color:'white',\r\n    //           backgroundColor:'black',\r\n    //           border:'1px solid white'\r\n    //       })\r\n    //       setBtntext(\"Enable light mode\");\r\n    //   }\r\n    //   else{\r\n    //       setMyStyle({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    // setBtntext(\"Enable dark mode\");\r\n    //   }\r\n    // }\r\n    let myStyle={\r\n      color:props.mode==='dark'?'white':'#042743',\r\n      backgroundColor:props.mode==='dark'?'rgb(36 74 104)':'white',\r\n      // border:'2px solid',\r\n      // borderColor:props.mode==='dark'?'white':'#042743'\r\n    }\r\n  return (\r\n    <div className=\"container\" >\r\n        <h1 className=\"my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"card\" >\r\n          <div className=\"card-header\" id=\"headingOne\" >\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                style={myStyle}\r\n                data-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n               <strong >Analize your text</strong>\r\n              </button>\r\n            </h2>\r\n          </div>\r\n\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"card-body\" style={myStyle}>\r\n               Textutils gives you a way to analize your text quickly and effciently . Be it word count,charactar count!\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"headingTwo\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link collapsed\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                style={myStyle}\r\n                data-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <strong >Free to use</strong>\r\n              </button>\r\n            </h2>\r\n          </div>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"card-body\" style={myStyle}>\r\n               Textutils is a free character counter tool that provides instant character count & word count statistics for a given text.Textutils reports the number of words and Characters.Thus it is suitable for writing text with word /character limit! \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"headingThree\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link collapsed\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                style={myStyle}\r\n                data-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <strong >Browser Compatible </strong>\r\n              </button>\r\n            </h2>\r\n          </div>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"card-body\" style={myStyle}>\r\n              This word counter software works in any web browsers such as Chrome,Firefox,Internet explorer,Safari,Opera.It suits to count Characters in Facebook,blog,books,excel document,pdf document,essays,etc.!\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container\">\r\n      <button type=\"button\" className=\"btn btn-primary my-4\" onClick={toggleStyle}>{btntext}</button> */}\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.tittle}\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item \">\r\n            <Link className=\"nav-link\" to=\"\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/About\">\r\n              {props.Abouttext}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n        <div className={`custom-control custom-switch mx-1 text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input\r\n            type=\"checkbox\"\r\n            onClick={props.toggleMode}\r\n            className=\"custom-control-input\"\r\n            id=\"customSwitch1\"\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n            Enable dark mode\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  tittle: PropTypes.string.isRequired,\r\n  Abouttext: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  tittle: \"Please Set your tittle\",\r\n  Abouttext: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextArea(props) {\r\n    const handleOnclick=()=>{\r\n        // console.log(\"UpperCase was clicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handleloclick=()=>{\r\n        // console.log(\"LowerCase was clicked\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleclearclick=()=>{\r\n      let newText=\"\";\r\n      setText(newText);\r\n      props.showAlert(\"Cleared text!\",\"success\");\r\n    }\r\n    const handleOnchange=(event)=>{\r\n        // console.log(\"On change\")\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy=()=>{\r\n      var text=document.getElementById(\"mybox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Copied to clipboard!\",\"success\");\r\n\r\n    }\r\n    const handleExtraspaces=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Removed the spaces!\",\"success\");\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 className='mb-5'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea \r\n          className=\"form-control\"\r\n          style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}}\r\n          id=\"mybox\"\r\n          rows=\"8\" value={text} onChange={handleOnchange}\r\n        ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleOnclick}>Convert to UpperCase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2 \" onClick={handleloclick}>Convert to LowerCase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleclearclick}>Clear text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraspaces}>Clear spaces</button>\r\n    </div>\r\n    <hr/>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n        <hr/>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n  {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize (props.alert.type)}</strong>:{props.alert.msg}\r\n     </div>}\r\n     </div>\r\n    )\r\n}\r\n","\nimport About from './About';\nimport './App.css';\nimport Navbar from './Navbar';\nimport TextArea from './TextArea';\nimport React,{useState} from \"react\";\nimport Alert from './alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n        <Navbar tittle=\"TextUtils\" Abouttext=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n        {/* <h3>Made by Mukesh...</h3> */}\n        <Alert alert={alert}/>\n        <div className=\"container my-5\">\n        <Switch> \n          <Route exact path=\"/About\">\n            <About mode={mode}/>\n          </Route> \n          <Route exact path=\"/\">\n          <TextArea showAlert={showAlert} heading=\"Try Textutils-Word Counter,Character Counter,Remove extra spaces\" mode={mode}/>\n          </Route>\n        </Switch>\n        </div>\n         </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}